/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas;

import com.sun.glass.ui.Cursor;
import deudas.OpcionesDeudas;
import productos.AlimentosCod;
import productos.ListaAlimentosAd;
import productos.OpcionesAl;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import static principal.MenuPrincipalAd.escritorio;
import static ventas.RegistroVentas.tablaVentas;

/**
 *
 * @author 4L3
 */
public class CajaAd extends javax.swing.JInternalFrame {

    /**
     * Creates new form Usuarios
     */
    public boolean estacerrado(Object obj) {
        JInternalFrame[] activos = escritorio.getAllFrames();

        boolean cerrado = true;
        int i = 0;
        while (i < activos.length && cerrado) {
            if (activos[i] == obj) {
                cerrado = false;
            }
            i++;
        }
        return cerrado;
    }

    productos.ListaAlimentosAd la;

    public CajaAd() {
        initComponents();
        tablaCaja.getTableHeader().setDefaultRenderer(new principal.EstiloTablaHeader());
        tablaCaja.setDefaultRenderer(Object.class, new principal.EstiloTablaCaja());
        this.setFrameIcon(new ImageIcon(getClass().getResource("/imagenes/caja/icono.png")));
        tablaCaja.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        limpiaCampos();
        text_deuda.setEnabled(false);
        //ESCUCHAR EVENTO DE CERRAR JINTERNALFRAME
        addInternalFrameListener(new InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent e) {
                System.out.println("CERAADA CAJA");
                if (estacerrado(la) == false) {
                    la.dispose();
                }
            }
        });
    }

    public static String fechaactual() {
        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatofecha.format(fecha);

    }

    void limpiaCampos() {
        DefaultTableModel modelo = (DefaultTableModel) tablaCaja.getModel();

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        recibi.setText("");
        cambio.setText("");
        total.setText("0.0");
        fecha.setText("");
        fecha.setText(fechaactual());
        OpcionesVen.numeros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        busca = new javax.swing.JButton();
        fecha = new app.bolivia.swing.JCTextField();
        codigoL5 = new javax.swing.JLabel();
        recibi = new app.bolivia.swing.JCTextField();
        codigoL6 = new javax.swing.JLabel();
        cambio = new app.bolivia.swing.JCTextField();
        codigoL7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        vender = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        text_deuda = new javax.swing.JLabel();
        on_off_deuda = new javax.swing.JCheckBox();
        FONDO_DEUDA = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCaja = new javax.swing.JTable();
        total = new app.bolivia.swing.JCTextField();
        codigoL3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        numFac = new app.bolivia.swing.JCTextField();
        codigoL4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("CAJA DE CORBO");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        busca.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        busca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/producto2.png"))); // NOI18N
        busca.setBorder(null);
        busca.setContentAreaFilled(false);
        busca.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        busca.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        busca.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/producto1.png"))); // NOI18N
        busca.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaActionPerformed(evt);
            }
        });
        jPanel2.add(busca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        fecha.setEditable(false);
        fecha.setBackground(new java.awt.Color(34, 102, 145));
        fecha.setBorder(null);
        fecha.setForeground(new java.awt.Color(255, 255, 255));
        fecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fecha.setOpaque(false);
        fecha.setPhColor(new java.awt.Color(255, 255, 255));
        fecha.setPlaceholder("FECHA");
        jPanel2.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 180, -1));

        codigoL5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/fecha.png"))); // NOI18N
        jPanel2.add(codigoL5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, 52));

        recibi.setBackground(new java.awt.Color(34, 102, 145));
        recibi.setBorder(null);
        recibi.setForeground(new java.awt.Color(255, 255, 255));
        recibi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recibi.setOpaque(false);
        recibi.setPhColor(new java.awt.Color(255, 255, 255));
        recibi.setPlaceholder("RECIBI");
        recibi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recibiKeyReleased(evt);
            }
        });
        jPanel2.add(recibi, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 130, -1));

        codigoL6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/recibi.png"))); // NOI18N
        codigoL6.setToolTipText("RECIBI");
        jPanel2.add(codigoL6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, 52));

        cambio.setEditable(false);
        cambio.setBackground(new java.awt.Color(34, 102, 145));
        cambio.setBorder(null);
        cambio.setForeground(new java.awt.Color(255, 255, 255));
        cambio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cambio.setOpaque(false);
        cambio.setPhColor(new java.awt.Color(255, 255, 255));
        cambio.setPlaceholder("CAMBIO");
        jPanel2.add(cambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 130, -1));

        codigoL7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/cambio.png"))); // NOI18N
        codigoL7.setToolTipText("CAMBIO");
        jPanel2.add(codigoL7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, 52));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "OPCIONES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        vender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/venta2.png"))); // NOI18N
        vender.setBorder(null);
        vender.setContentAreaFilled(false);
        vender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vender.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vender.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/venta1.png"))); // NOI18N
        vender.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venderActionPerformed(evt);
            }
        });
        jPanel3.add(vender, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 33, -1, -1));

        borrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/elimina2.png"))); // NOI18N
        borrar.setBorder(null);
        borrar.setContentAreaFilled(false);
        borrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        borrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        borrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/elimina1.png"))); // NOI18N
        borrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });
        jPanel3.add(borrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 89, -1, -1));

        cancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/cancela2.png"))); // NOI18N
        cancelar.setBorder(null);
        cancelar.setContentAreaFilled(false);
        cancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/cancela1.png"))); // NOI18N
        cancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel3.add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 145, -1, -1));

        text_deuda.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        text_deuda.setForeground(new java.awt.Color(255, 255, 255));
        text_deuda.setText("DEUDA");
        text_deuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                text_deudaMouseClicked(evt);
            }
        });
        jPanel3.add(text_deuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 206, 170, 40));

        on_off_deuda.setBackground(new java.awt.Color(204, 0, 0));
        on_off_deuda.setBorder(null);
        on_off_deuda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        on_off_deuda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        on_off_deuda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        on_off_deuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/apagar.png"))); // NOI18N
        on_off_deuda.setIconTextGap(40);
        on_off_deuda.setOpaque(false);
        on_off_deuda.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/apagar.png"))); // NOI18N
        on_off_deuda.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/on_off_deuda.png"))); // NOI18N
        on_off_deuda.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/on_off_deuda.png"))); // NOI18N
        on_off_deuda.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        on_off_deuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                on_off_deudaActionPerformed(evt);
            }
        });
        jPanel3.add(on_off_deuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 208, 40, 40));

        FONDO_DEUDA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FONDO_DEUDA2.png"))); // NOI18N
        FONDO_DEUDA.setText("jLabel2");
        jPanel3.add(FONDO_DEUDA, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 200, 200, 50));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "TIPO ALIMENTO", "DESCRIPCIÓN", "PRECIO $", "CANTIDAD", "IMPORTE $"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCaja.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tablaCaja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(tablaCaja);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 790, 200));

        total.setEditable(false);
        total.setBackground(new java.awt.Color(34, 102, 145));
        total.setBorder(null);
        total.setForeground(new java.awt.Color(255, 255, 255));
        total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        total.setOpaque(false);
        total.setPhColor(new java.awt.Color(255, 255, 255));
        total.setPlaceholder("TOTAL");
        jPanel4.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 230, 80, 30));

        codigoL3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/total.png"))); // NOI18N
        jPanel4.add(codigoL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 220, -1, 50));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/principal/logoAcceso.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 178, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numFac.setEditable(false);
        numFac.setBackground(new java.awt.Color(34, 102, 145));
        numFac.setBorder(null);
        numFac.setForeground(new java.awt.Color(255, 255, 255));
        numFac.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        numFac.setOpaque(false);
        numFac.setPhColor(new java.awt.Color(255, 255, 255));
        numFac.setPlaceholder("FACTURA");
        jPanel6.add(numFac, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 130, 30));

        codigoL4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/numFac.png"))); // NOI18N
        jPanel6.add(codigoL4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 50));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("NÚMERO DE VENTA");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaActionPerformed
        if (estacerrado(la)) {
            la = new ListaAlimentosAd();
            principal.MenuPrincipalAd.escritorio.add(la);
            la.toFront();
            la.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "La ventana LISTA DE PRODUCTOS\nya esta abierta !!!", "Aviso", 0,
                    new ImageIcon(getClass().getResource("/imagenes/principal/adver.png")));
        }
    }//GEN-LAST:event_buscaActionPerformed

    private void venderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venderActionPerformed
//        RegistroVentas reg=new RegistroVentas();
        try {
            if (tablaCaja.getRowCount() < 1) {
                JOptionPane.showMessageDialog(this, "Imposible realizar venta.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {

                
                        if (!on_off_deuda.isSelected()) {
                            Runnable runnable1 = new Runnable() {
                    public void run() {
//                        Loading l = new Loading();
//
//                        l.setLocationRelativeTo(CajaAd.this);
//                        l.setVisible(true);
                            escritorio.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
                        CajaAd.this.setEnabled(false);
                        //inicio metodo
                        //code
                        //fin metodo
                            VentasCod vc = new VentasCod();
                            productos.AlimentosCod us = new AlimentosCod();
                            int opcion = 0;
                            int control = 0;
                            
                            //   OpcionesVen.registrar_numero_venta(vc);
                            for (int j = 0; j < tablaCaja.getRowCount(); j++) {
                                vc.setPrimaryKey(numFac.getText());
                                vc.setFecha(fecha.getText());
                                vc.setTotal(total.getText());
                                vc.setDescripcion(tablaCaja.getValueAt(j, 2).toString());
                                vc.setCantidad(tablaCaja.getValueAt(j, 4).toString());
                                vc.setInversion(String.valueOf(Double.parseDouble(OpcionesVen.precio_compra_ID(tablaCaja.getValueAt(j, 0).toString())) * Integer.parseInt(tablaCaja.getValueAt(j, 4).toString())));
                                vc.setGanancia(String.valueOf(Double.parseDouble(OpcionesVen.ganancia(tablaCaja.getValueAt(j, 0).toString())) * Integer.parseInt(tablaCaja.getValueAt(j, 4).toString())));

                                opcion = OpcionesVen.registrar(vc);

                                if (opcion == 1) {
                                    control = control + 1;
                                }
                            }

                            
                            
                            if (control == tablaCaja.getRowCount()) {
                                int cantidad = 0;
                                for (int i = 0; i < tablaCaja.getRowCount(); i++) {
                                    cantidad = OpcionesAl.extraer_cant_almacen(tablaCaja.getValueAt(i, 0).toString());
                                    if (cantidad != 0) {
                                        resta_compra_almacen(OpcionesAl.extraer_cant_almacen(tablaCaja.getValueAt(i, 0).toString()) - Integer.parseInt(tablaCaja.getValueAt(i, 4).toString()), tablaCaja.getValueAt(i, 0).toString());
                                        OpcionesVen.actualizar_ganancia_alimentos(tablaCaja.getValueAt(i, 2).toString(), tablaCaja.getValueAt(i, 0).toString());
                                    }
                                }
                                limpiaCampos();

                                JOptionPane.showMessageDialog(CajaAd.this, "Venta realizada.", "Caja de cobro", 0,
                                        new ImageIcon(getClass().getResource("/imagenes/caja/ralizada.png")));
                                if (principal.MenuPrincipalAd.cerra1) {
                                    OpcionesVen.listar("");
                                }
                                OpcionesAl.listar3("");
                            }
                            CajaAd.this.setEnabled(true);
                            escritorio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
//                        l.setVisible(false);
                    }
                };
                Thread t1 = new Thread(runnable1);
                t1.start();

                        } else {
                            
                            Runnable runnable1 = new Runnable() {
                    public void run() {
//                        Loading l = new Loading();
//
//                        l.setLocationRelativeTo(CajaAd.this);
//                        l.setVisible(true);
                        escritorio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                        CajaAd.this.setEnabled(false);
                        //inicio metodo
                        //code
                        //fin metodo
                            
                            String titular = null;
                            deudas.DeudasCod dc = new deudas.DeudasCod();
                            productos.AlimentosCod us = new AlimentosCod();
                            int opcion = 0;
                            int control = 0;

                            titular = JOptionPane.showInputDialog(CajaAd.this, "Titular:", "Cuenta por cobrar", JOptionPane.INFORMATION_MESSAGE);
                            while (titular.equals("") && titular != null) {
                                titular = JOptionPane.showInputDialog(CajaAd.this, "Debe ingresar un 'Titular' al cual cargarle la cuenta por cobrar",
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            if (!titular.equals("")) {
                                for (int j = 0; j < tablaCaja.getRowCount(); j++) {
                                    dc.setPrimaryKey(numFac.getText());
                                    dc.setTitular(titular.toUpperCase());
                                    dc.setFecha(fecha.getText());
                                    dc.setTotal(total.getText());
                                    dc.setDescripcion(tablaCaja.getValueAt(j, 2).toString());
                                    dc.setCantidad(tablaCaja.getValueAt(j, 4).toString());
                                    dc.setInversion(String.valueOf(Double.parseDouble(OpcionesVen.precio_compra_ID(tablaCaja.getValueAt(j, 0).toString())) * Integer.parseInt(tablaCaja.getValueAt(j, 4).toString())));
                                    dc.setGanancia(String.valueOf(Double.parseDouble(OpcionesVen.ganancia(tablaCaja.getValueAt(j, 0).toString())) * Integer.parseInt(tablaCaja.getValueAt(j, 4).toString())));

                                    opcion = deudas.OpcionesDeudas.registrarDeuda(dc);

                                    if (opcion == 1) {
                                        control = control + 1;
                                    }
                                }

                                if (control == tablaCaja.getRowCount()) {
                                    int cantidad = 0;
                                    for (int i = 0; i < tablaCaja.getRowCount(); i++) {
                                        cantidad = OpcionesAl.extraer_cant_almacen(tablaCaja.getValueAt(i, 0).toString());
                                        if (cantidad != 0) {
                                            resta_compra_almacen(OpcionesAl.extraer_cant_almacen(tablaCaja.getValueAt(i, 0).toString()) - Integer.parseInt(tablaCaja.getValueAt(i, 4).toString()), tablaCaja.getValueAt(i, 0).toString());
                                            OpcionesVen.actualizar_ganancia_alimentos(tablaCaja.getValueAt(i, 2).toString(), tablaCaja.getValueAt(i, 0).toString());
                                        }
                                    }

                                    limpiaCampos();

                                    JOptionPane.showMessageDialog(CajaAd.this, "Cuenta por cobrar archivada.", "Caja de cobro", 0,
                                            new ImageIcon(getClass().getResource("/imagenes/caja/ralizada.png")));
                                    if (principal.MenuPrincipalAd.cerra1) {
                     //                   OpcionesVen.listar("");
                                    }
                                    OpcionesAl.listar3("");
                                }

//                                OpcionesVen.listar("");
//                                organizar_tabla();DAS
                            }
                            
                            
                             CajaAd.this.setEnabled(true);
                             escritorio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
//                        l.setVisible(false);
                    }
                };
                Thread t1 = new Thread(runnable1);
                t1.start();
                        }
//        RegistroVentas reg = new RegistroVentas();
//        reg.cambia_texto("pinga");


            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_venderActionPerformed

    public void organizar_tabla() {
        String numero = "";
        int fila = 0;
        //  tablaVentas.setDefaultRenderer(Object.class, new principal.EstiloTablaVentas());
        //  EstiloTablaVentas estilo=new EstiloTablaVentas();
        for (int i = 0; i < tablaVentas.getRowCount() - 1; i++) {
            numero = tablaVentas.getValueAt(fila, 0).toString();
            if (numero.equals(tablaVentas.getValueAt(i + 1, 0).toString())) {
                tablaVentas.setValueAt("", i + 1, 0);
                tablaVentas.setValueAt("", i + 1, 3);
                tablaVentas.setValueAt("", i + 1, 6);
            } else {
                fila = i + 1;
            }
        }
    }

    public void resta_compra_almacen(int cantidad, String codigo) {

        OpcionesAl.actualizar_almacen(cantidad, codigo);
    }


    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        if (tablaCaja.getRowCount() > 0) {
            DefaultTableModel modelo = (DefaultTableModel) tablaCaja.getModel();
            int fila = tablaCaja.getSelectedRow();
            if (fila >= 0) {
                modelo.removeRow(fila);
                ListaAlimentosAd la = new ListaAlimentosAd();
                la.calcular();
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione una fila.", "Caja de cobro", 0,
                        new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay registros\npara eliminar.", "Caja de cobro", 0,
                    new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        limpiaCampos();
    }//GEN-LAST:event_cancelarActionPerformed

    private void recibiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recibiKeyReleased
        // TODO add your handling code here:
        if (tablaCaja.getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Imposible realizar operación.", "Error", JOptionPane.ERROR_MESSAGE);
            // } else if (recibi.getText().equals("")) {   
//            JOptionPane.showMessageDialog(this, "Ingrese un valor.", "Caja de cobro", 0,
//                    new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
            recibi.setText("");
        } else {
            if (recibi.getText().isEmpty() || (Double.parseDouble(recibi.getText()) - Double.parseDouble(total.getText()) < 0)) {
                cambio.setText("");
            } else {
                double recibe = Double.parseDouble(recibi.getText());
                double tota = Double.parseDouble(total.getText());

                if (recibe < tota) {
//                JOptionPane.showMessageDialog(this, "Ingrese un valor valido.", "Caja de cobro", 0,
//                        new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
                } else {
                    this.cambio.setText(String.valueOf(recibe - tota));
                }

            }
        }
    }//GEN-LAST:event_recibiKeyReleased

    private void on_off_deudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_on_off_deudaActionPerformed
        // TODO add your handling code here:
        if (on_off_deuda.isSelected()) {
            text_deuda.setEnabled(false);
        } else {
            text_deuda.setEnabled(true);
        }
    }//GEN-LAST:event_on_off_deudaActionPerformed

    private void text_deudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_deudaMouseClicked
        // TODO add your handling code here:
        if (on_off_deuda.isSelected()) {
            on_off_deuda.setSelected(false);
            text_deuda.setEnabled(false);
        } else {
            on_off_deuda.setSelected(true);
            text_deuda.setEnabled(true);
        }
    }//GEN-LAST:event_text_deudaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FONDO_DEUDA;
    private javax.swing.JButton borrar;
    private javax.swing.JButton busca;
    public static app.bolivia.swing.JCTextField cambio;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel codigoL3;
    private javax.swing.JLabel codigoL4;
    private javax.swing.JLabel codigoL5;
    private javax.swing.JLabel codigoL6;
    private javax.swing.JLabel codigoL7;
    private app.bolivia.swing.JCTextField fecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    public static app.bolivia.swing.JCTextField numFac;
    private javax.swing.JCheckBox on_off_deuda;
    public static app.bolivia.swing.JCTextField recibi;
    public static javax.swing.JTable tablaCaja;
    private javax.swing.JLabel text_deuda;
    public static app.bolivia.swing.JCTextField total;
    private javax.swing.JButton vender;
    // End of variables declaration//GEN-END:variables
}
